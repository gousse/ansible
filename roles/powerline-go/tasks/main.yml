---
- name: go get powerline-go
  shell: "go get -u github.com/justjanne/powerline-go"

- file:
    path: "{{ansible_user_dir}}/.config/powerline-go"
    state: directory
    mode: 0755

- stat:
    path: "{{ansible_user_dir}}/.config/powerline-go/config.sh"
  register: pwrlconf

- name: default conf
  copy:
    dest: "{{ansible_user_dir}}/.config/powerline-go/default.sh"
    content: |
      function _update_ps1() {
      PS1="$($GOPATH/bin/powerline-go -error $? -jobs $(jobs -p | wc -l))"
  
      # Uncomment the following line to automatically clear errors after showing
      # them once. This not only clears the error for powerline-go, but also for
      # everything else you run in that shell. Don't enable this if you're not
      # sure this is what you want.
  
      #set "?"
      }
      
      if [ "$TERM" != "linux" ] && [ -f "$GOPATH/bin/powerline-go" ]; then
          PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
      fi

- name: set default config if not exist
  file:
    src: "{{ansible_user_dir}}/.config/powerline-go/default.sh"
    dest: "{{ansible_user_dir}}/.config/powerline-go/config.sh"
    state: link
  when: pwrlconf.stat.exists == false

- name: activate powerline shell prompt in bashrc
  lineinfile:
    path: "{{ansible_user_dir}}/.bashrc"
    regexp: '^if \[ -f ~/.config/powerline-go/config.sh *'
    line: 'if [ -f ~/.config/powerline-go/config.sh ]; then . ~/.config/powerline-go/config.sh ; fi'
